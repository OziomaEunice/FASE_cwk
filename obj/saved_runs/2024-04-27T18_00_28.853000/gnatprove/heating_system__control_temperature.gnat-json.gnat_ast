(* Module for defining a ref holding the value of variable "temp" defined at heating_system.ads:13, created in Gnat2Why.Decls.Translate_Variable *)
module Heating_system__control_temperature__temp
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val temp [model_projected] [name:Temp]
  [model_trace:924] [sloc:heating_system.ads:13]: int

end

(* Module for axiomatizing type "temperature" defined at heating_system.ads:4, created in Gnat2Why.Types.Translate_Type *)
module Heating_system__temperature
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type temperature  = <range 0 40>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 40
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = temperature,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type temperature__ref  = { mutable temperature__content : temperature }
  
  function   temperature__ref_temperature__content__projection
    (a : temperature__ref) requires {  } ensures  {  } returns
    temperature = a.temperature__content
  
  meta model_projection function temperature__ref_temperature__content__projection
  
  meta inline:no function temperature__ref_temperature__content__projection
  
  function   temperature__havoc (x : temperature__ref) requires {  } ensures 
    {  } returns unit

end

(* Module giving axioms for type "temperature" defined at heating_system.ads:4, created in Gnat2Why.Types.Generate_Type_Completion *)
module Heating_system__temperature___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Heating_system__temperature
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_165) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_161) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_162) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_163) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_164) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_161) = True) \/
          (Heating_system__temperature.first
             <= Heating_system__temperature.last))
       then
       (Heating_system__temperature.dynamic_property
          Heating_system__temperature.first Heating_system__temperature.last
          ([mlw:proxy_symbol] [introduced] temp___expr_165))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_166) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_167) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving an empty axiom for the entity "temp" defined at heating_system.ads:13, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Heating_system__control_temperature__temp___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for checking contracts and absence of run-time errors in subprogram "control_temperature" defined at heating_system.ads:13, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Heating_system__control_temperature__subprogram_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Main
  use        _gnatprove_standard.Boolean
  use        Heating_system__control_temperature__temp
  use        Heating_system__temperature___axiom
  use        Heating_system__temperature___axiom
  use        Heating_system__control_temperature__temp___axiom
  
  function [GP_Subp:heating_system.ads:13] [sloc:heating_system.ads:13] def
    (__void_param : unit) requires { True } ensures 
    { ([sloc:heating_system.ads:15] ([GP_Reason:VC_POSTCONDITION]
                                    [comment:     Post => (Temp >= 17 and Temp <= 19);              ^ heating_system.ads:15:14:VC_POSTCONDITION]
                                    [GP_Sloc:heating_system.ads:15:14]
                                    [model_vc_post] [GP_Id:0]
                                    [GP_Shape:pragargs__and] (([GP_Pretty_Ada:940]
                                                              [GP_Sloc:heating_system.ads:15:15] (
                                                              !Heating_system__control_temperature__temp.temp
                                                                >= 17)) /\
                                                                ([GP_Pretty_Ada:944]
                                                                [GP_Sloc:heating_system.ads:15:30] (
                                                                !Heating_system__control_temperature__temp.temp
                                                                  <= 19))))) }
    returns
     = (* Assume dynamic invariants of inputs of the subprogram heating_system.ads:13 *);
        assume
        { (Heating_system__temperature___axiom.dynamic_invariant
             !Heating_system__control_temperature__temp.temp True False True
             True) };
        (* Assume moved pointers in outputs of the subprogram heating_system.ads:13 *);
        (* Check for RTE in the Pre of the subprogram heating_system.ads:13 *);
        abstract ensures
        { True } begin  (let _ =
                       (!Heating_system__control_temperature__temp.temp = 15)
                       in ())  end;
        (* Assume Pre of the subprogram heating_system.ads:13 *);
        assume
        { ([GP_Pretty_Ada:974] (!Heating_system__control_temperature__temp.temp
                                  = 15)) };
        (try
        ();
          ([GP_Sloc:heating_system.adb:7:12] ([sloc:heating_system.adb:7] (
                                             Heating_system__control_temperature__temp.temp
                                             := ( 15))));
          ([GP_Sloc:heating_system.adb:11:7] ([sloc:heating_system.adb:11] 
                                             (if
                                             ([sloc:heating_system.adb:15] ([branch_id=833]
                                             _gnatprove_standard.Main.spark__branch
                                             :=
                                             (_gnatprove_standard.Boolean.andb
                                                (0
                                                   <= !Heating_system__control_temperature__temp.temp)
                                                (!Heating_system__control_temperature__temp.temp
                                                   <= 16))));
                                             ([branch_id=833] _gnatprove_standard.Main.spark__branch).bool__content
                                             then
                                             ();
                                             ([GP_Sloc:heating_system.adb:16:13] 
                                             ([sloc:heating_system.adb:16] 
                                             (if
                                             ([sloc:heating_system.adb:16] ([branch_id=837]
                                             _gnatprove_standard.Main.spark__branch
                                             :=
                                             (_gnatprove_standard.Boolean.orb
                                                (!Heating_system__control_temperature__temp.temp
                                                   < 17)
                                                (!Heating_system__control_temperature__temp.temp
                                                   > 19))));
                                             ([branch_id=837] _gnatprove_standard.Main.spark__branch).bool__content
                                             then
                                             ();
                                             ([GP_Sloc:heating_system.adb:17:21] 
                                             ([sloc:heating_system.adb:17] (
                                             Heating_system__control_temperature__temp.temp
                                             := ( 18))))  else ())))
                                             (if
                                             ([sloc:heating_system.adb:22] ([branch_id=848]
                                             _gnatprove_standard.Main.spark__branch
                                             :=
                                             (_gnatprove_standard.Boolean.andb
                                                (20
                                                   <= !Heating_system__control_temperature__temp.temp)
                                                (!Heating_system__control_temperature__temp.temp
                                                   <= 40))));
                                             ([branch_id=848] _gnatprove_standard.Main.spark__branch).bool__content
                                             then
                                             ();
                                             ([GP_Sloc:heating_system.adb:23:16] 
                                             ([sloc:heating_system.adb:23] 
                                             (if
                                             ([sloc:heating_system.adb:23] ([branch_id=852]
                                             _gnatprove_standard.Main.spark__branch
                                             :=
                                             (!Heating_system__control_temperature__temp.temp
                                                >= 20)));
                                             ([branch_id=852] _gnatprove_standard.Main.spark__branch).bool__content
                                             then
                                             ();
                                             ([GP_Sloc:heating_system.adb:24:24] 
                                             ([sloc:heating_system.adb:24] (
                                             Heating_system__control_temperature__temp.temp
                                             := ( 19))))  else ())))) else
                                             ();
                                             ([GP_Sloc:heating_system.adb:30:16] 
                                             ([sloc:heating_system.adb:30] ())))));
          raise Return__exc with | Return__exc  -> ());
        abstract ensures
        { True } begin  (let _ =
                       (_gnatprove_standard.Boolean.andb
                          (!Heating_system__control_temperature__temp.temp
                             >= 17)
                          (!Heating_system__control_temperature__temp.temp
                             <= 19))
                       in ())  end

end
